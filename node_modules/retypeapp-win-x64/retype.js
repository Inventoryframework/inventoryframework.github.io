#!/usr/bin/env node
const spawn = require('child_process').spawn;
const path = require('path');

var execPath = path.resolve(path.join(__dirname, './bin', './retype'))
var args = [];

var verbose = false,
    reading_args = true;
if (process.argv.length > 2) {
    for (var i = 2; i < process.argv.length; i++) {
        var arg = process.argv[i];
        if (arg == "--") {
            reading_args = false;
        } else if (reading_args && process.argv[i] == "--verbose") {
            verbose = true;
        }

        args.push(process.argv[i]);
    }
}

function verboseLog(message) {
    if (verbose) {
        console.log("Node.JS wrapper: " + message);
    }
}

function cleanQuit(code) {
    verboseLog("exiting with status " + code + ".");
    process.exit(code);
}

var processHandle = spawn(execPath, args, { stdio: 'inherit' });

// Continue execution on SIGINT; Retype is supposed to handle it.
process.on("SIGINT", () => {});

processHandle.on('exit', (code, signal) => cleanQuit(code));